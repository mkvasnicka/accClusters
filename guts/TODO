TODO
====

Předání dat Štěpánovi
---------------------
- tabulka lixels
    - sloupce lixel_id, geometrie, density, klastr_id
    - jen lixely, které jsou součástí nějakého klastru nebo s hustotou v 95. kvantilu a výše
- tabulka accidents
    - sloupce p1 a klastr_id
    - jen nehody, které jsou součástí klastrů
tabulky po bufferovaných okresech
    - otázka, co dělat s okraji: nechat/oříznout
    - pokud oříznout, co klastry na pomezí? asi nechat celé?
každá tabulka je pro jeden okres a jeden čas
    - časy definuje konfigurační tabulka, asi TSV (from_date, to_date)
    - to znamená, že
        - density už se počítají pro různé časy
        - všechno za tím (klastry) se musí počítat nejen pro okresy, ale i pro časy
        - name funkce (sf_file_name() apod.) musí mít parametr ... pro předání takových parametrů
        - podobně rozšířit funkce is_behind() a districts_behind()
jména souborů XXXX_####_YYYY_MM_DD_YYYY_MM_DD, kde
    - XXXX je číslo okresu
    - první YYYY_MM_DD je počáteční datum
    - druhé YYYY_MM_DD je koncové datum
compute_densities()
    - přidat help
    - výstupní soubor závisí na from_date, to_date -- nutno upravit name funkci
    - napsat wrapper, který projde nejen tabulku okresů, ale i tabulku datumů


Hotspoty/klastry
----------------

- vyzkoušet výpočet NKDE paralelně s neváženými nehodami a vážnými pomocí injuries
- PAI optimalizace parametrizace tvorby klastrů
- jak zahrnout čas? zatím se počítá na všech nehodách. jak to udělat? možnosti:
    - statická tabulka s rozsahy datumů, pro které se to počítá
    - nějaký automat
    - jen poslední klouzavé okno (např. 3 roky zpět od posledního data)
- otázka: optimalizovat parametry klastrů globálně (tj. PAI celku, nebo po jednotlivých klastech)?
    - pokud po klastrech, jak?


Mapy
----

Pro všechny okresy:
- zkontrolovat počet souvislých podgrafů
- spustit kontrolu, o které psal Gelb

Funkce:
- SF silnice v .rds jsou nově sfnetworks -- tomu se bude muset přizpůsobit kód, který na tom staví
- vyřešit spojování blízkých bodů v sfnetworks
    - problém:
        - buď vyhodím nahrazené cesty, ale to vyhodí i všechny smyčky v síti,
        - nebo nevyhodím smyčky, ale zůstanou tam i původní silnice
    - dělá to parametr simplify na řádku
        tidygraph::convert(sfnet, sfnetworks::to_spatial_contracted, cls, cmp,
                           simplify = FALSE)
- zrychlit hledání klastrů hotspotů na sf/sfnetworks/spNetwork
- CRS všude vytahat z funkcí do jejich interface -- tam použít konstatny
- funkce create_sf_nb() používá sf_touches() -- použít raději from -- to v lixelech?

Tvorba OSM
- osmium nechce pokračovat, když soubory .osm existují -- na začátku funkce, která je má vytvořit, je třeba je vymazat


Nehody
------

V současnosti se natahují jen soupce z tabulky nehody a z GPS se doplní souřadnice.
- doplnit ostatní sloupce, které budou potřeba
- vyhodit sloupce, které nejsou potřeba
- jak počítat závažnost nehody?
- create_districts_accidents() běží na málo jádrech, protože  vyžaduje hodně paměti -- asi kvůli kopírování velké tabulky accidents; asi by šlo zlepšit, kdyby se tabulka prvně cropem rozdělila na kusy a ty se poslaly přímo do paralelizace


Všude
-----

- počet workers vzít z get_number_of_workers()
- odstranit jména souborů z tabulky districts a všude, kde se na to odkazuje, a nahradit to funkcemi, které budou používat id z districts
- spojit všechny prepare_*.R do jednoho souboru a přidat logování
- najít všechna volání purrr a paralelizovat, co je možné
